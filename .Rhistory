formula_str <- paste(CESTnetwork, " ~ dateDiff +", network) #sex + age +
m1 <- lm(formula_str, data = graph_df)
summary <- summary(m1)
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = network,
y = CESTnetwork)) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab(CESTnetwork) +
xlab(paste(network, "FC")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
sum_list[[CESTnetwork]] <- summary
}
# Initialize an empty list to store ggplot objects
gg_list <- list()
sum_list <- list()
for (network in networks) {
CESTnetwork <- paste("avgCEST_", network, sep = "")
graph_cols <- c(network, CESTnetwork, 'age', 'sex','dateDiff')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs FC
formula_str <- paste(CESTnetwork, " ~ dateDiff + sex + age +", network) #
m1 <- lm(formula_str, data = graph_df)
summary <- summary(m1)
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = network,
y = CESTnetwork)) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab(CESTnetwork) +
xlab(paste(network, "FC")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
sum_list[[CESTnetwork]] <- summary
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
for (summary in sum_list) {
print(summary)
}
# Initialize an empty list to store ggplot objects
gg_list <- list()
sum_list <- list()
for (network in networks) {
CESTnetwork <- paste("avgCEST_", network, sep = "")
graph_cols <- c(network, CESTnetwork, 'age', 'sex','dateDiff')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs FC
formula_str <- paste(CESTnetwork, " ~ dateDiff + sex + age +", network) #
m1 <- lm(formula_str, data = graph_df)
summary <- summary(m1)
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = network,
y = CESTnetwork)) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab(CESTnetwork) +
xlab(paste(network, "FC")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
sum_list[[CESTnetwork]] <- summary
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
for (summary in sum_list) {
print(summary)
}
print(sum_list)
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ sex")
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ sex")
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Initialize an empty list to store ggplot objects
gg_list <- list()
sum_list <- list()
for (network in networks) {
CESTnetwork <- paste("avgCEST_", network, sep = "")
graph_cols <- c(network, CESTnetwork, 'age', 'sex','dateDiff')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs FC
formula_str <- paste(CESTnetwork, " ~ dateDiff + sex + age +", network) #
m1 <- lm(formula_str, data = graph_df)
summary <- summary(m1)
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = network,
y = CESTnetwork)) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab(CESTnetwork) +
xlab(paste(network, "FC")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
sum_list[[CESTnetwork]] <- summary
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
for (summary in sum_list) {
print(summary)
}
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age + sex")
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggpmisc)
source("~/projects/GluCEST-fMRI/glucest-rsfmri/read_grp_data.R")
#source("/cbica/projects/thalamocortical_development/software/rotate_parcellation/R/perm.sphere.p.R") This package is used for parcel-based spin testing.
#https://www.middleprofessor.com/files/applied-biostatistics_bookdown/_book/adding-covariates-to-a-linear-model
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age + sex")
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
networks = c("Default", "SomMot") #,
CESTnetworks = c("avgCEST_Default","avgCEST_SomMot") #  "ctCEST_Cont", "ctCEST_Default",, "ctCEST_Limbic",  ,"ctCEST_SalVentAttn"
CESTcts = c("ctCEST_Default","ctCEST_SomMot")
CNB_scores = c("tap_tot")
CNB_valids = c("tap_valid") #,
diag_scores = c("dx_pscat") # ,"axis1_desc1","axis1_stat1"
demo_scores = c("sex", "age", "race","ethnic","dateDiff")
diag_details = c("axis1_desc1", "axis1_desc2", "axis1_desc3","axis1_desc4","axis1_desc5", "axis1_desc6")
covariate_age = 'age'
covariate_sex = 'sex'
covariate_ct = 'count'
grp_df$'age' <- as.numeric(grp_df$'age')
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age + sex")
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[4, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
view(graph_df)
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age + sex")
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[2, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age") # + sex
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[2, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
# Remove subjs with tap_tot outlier scores
grp_df <- grp_df[!(grp_df$tap_tot>130),]
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age") # + sex
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[2, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
# Remove subjs with tap_tot outlier scores
grp_df <- grp_df[!(grp_df$tap_tot>125),]
grp_df <- grp_df[!(grp_df$tap_tot<75),]
# Remove subjs with tap_tot outlier scores
grp_df <- grp_df[!(grp_df$tap_tot>125),]
grp_df <- grp_df[!(grp_df$tap_tot<75),]
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age") # + sex
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[2, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
# Print or display ggplot objects
for (gg in gg_list) {
print(gg)
}
install.packages("cowplot")
knitr::opts_chunk$set(echo = FALSE,
out.width="49%",
out.height="49%",
fig.show='hold',
fig.align='center')
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggpmisc)
library(cowplot)
source("~/projects/GluCEST-fMRI/glucest-rsfmri/read_grp_data.R")
#source("/cbica/projects/thalamocortical_development/software/rotate_parcellation/R/perm.sphere.p.R") This package is used for parcel-based spin testing.
#https://www.middleprofessor.com/files/applied-biostatistics_bookdown/_book/adding-covariates-to-a-linear-model
# Markdown help:
# https://bookdown.org/yihui/rmarkdown-cookbook/figures-side.html#fig:figures-side
View(gg_list)
View(graph_df)
knitr::opts_chunk$set(echo = FALSE,
#   out.width="49%",
#   out.height="49%",
fig.show='hold')
#   fig.align='center')
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggpmisc)
library(cowplot)
source("~/projects/GluCEST-fMRI/glucest-rsfmri/read_grp_data.R")
#source("/cbica/projects/thalamocortical_development/software/rotate_parcellation/R/perm.sphere.p.R") This package is used for parcel-based spin testing.
#https://www.middleprofessor.com/files/applied-biostatistics_bookdown/_book/adding-covariates-to-a-linear-model
# Markdown help:
# https://bookdown.org/yihui/rmarkdown-cookbook/figures-side.html#fig:figures-side
# Initialize an empty list to store ggplot objects
gg_list <- list()
for (CESTnetwork in CESTnetworks) {
graph_cols <- c(CESTnetwork, 'age', 'sex', 'tap_tot')
graph_df <- grp_df[complete.cases(grp_df[, graph_cols]), ]
print(nrow(graph_df))
# GluCEST vs Tapping Score
formula_str <- paste("tap_tot ~", CESTnetwork, "+ age") # + sex
m1 <- lm(formula_str, data = graph_df)
print(summary(m1))
r_squared <- summary(m1)$r.squared
p_value <- summary(m1)$coefficients[2, 4]
# Create plot
gg <- ggplot(graph_df,
aes_string(x = CESTnetwork,
y = "tap_tot")) + #, color=hstatus
geom_point() + #aes(color=treatment)
geom_smooth(method = "lm",
formula = y ~ x,
se = FALSE) +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = 0,
label = paste("R-squared =", round(r_squared, 3), "\n", "p-value =", round(p_value, 3)),
size = 4) +
ylab("Tapping Score") +
xlab(paste(CESTnetwork, "GluCEST")) +
# theme_pander() +
theme(legend.position="bottom")
# Add ggplot object to the list
gg_list[[CESTnetwork]] <- gg
}
#plot_grid(gg_list[["avgCEST_SomMot"]], gg_list[["avgCEST_Default"]])
# Print or display ggplot objects
# Print or display ggplot objects
for (gg in gg_list) {
plot(gg)
}
View(grp_df)
setwd("/Users/pecsok/projects/GluCEST-fMRI/glucest-rsfmri/")
# Set fieldstrength and read in group data:
fieldstrength= "3T"
grp_df <- read_grp_data(fieldstrength,'grp_df_')
diag_df = read_grp_data(fieldstrength,'diag_df_')
View(grp_df)
new_df = subset(grp_df, select = c(BBLID, sex))
new_df = subset(grp_df, select = c(BBLID, sex, dateDiff, Default, SomMot, avgCEST_Default, avgCEST_SomMot,tap_tot, hstatus,age))
View(new_df)
